/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.0.0-rc4-master-681a8fb
 */
function MdToastDirective(t){return{restrict:"E",link:function(e,o,n){e.$on("$destroy",function(){t.destroy()})}}}function MdToastProvider(t){function e(t){n=t}function o(t,e,o){function a(a,i,d){return n=d.textContent||d.content,i=o.extractElementByName(i,"md-toast",!0),d.onSwipe=function(t,n){i.addClass("md-"+t.type.replace("$md.","")),o.nextTick(e.cancel)},d.openClass=s(d.position),d.parent.addClass(d.openClass),o.hasComputedStyle(d.parent,"position","static")&&d.parent.css("position","relative"),i.on(r,d.onSwipe),i.addClass(d.position.split(" ").map(function(t){return"md-"+t}).join(" ")),t.enter(i,d.parent)}function i(e,n,a){return n.off(r,a.onSwipe),a.openClass&&a.parent.removeClass(a.openClass),(1==a.$destroy?n.remove():t.leave(n)).then(function(){o.hasComputedStyle(a.parent,"position","static")&&a.parent.css("position","")})}function s(t){return"md-toast-open-"+(t.indexOf("top")>-1?"top":"bottom")}var r="$md.swipeleft $md.swiperight";return{onShow:a,onRemove:i,position:"bottom left",themable:!0,hideDelay:3e3}}var n,a="ok",i=t("$mdToast").setDefaults({methods:["position","hideDelay","capsule","parent"],options:o}).addPreset("simple",{argOption:"textContent",methods:["textContent","content","action","highlightAction","theme","parent"],options:["$mdToast","$mdTheming",function(t,e){var o={template:['<md-toast md-theme="{{ toast.theme }}" ng-class="{\'md-capsule\': toast.capsule}">',"<span flex>{{ toast.content }}</span>",'<md-button class="md-action" ng-if="toast.action" ng-click="toast.resolve()" ng-class="{\'md-highlight\': toast.highlightAction}">',"{{ toast.action }}","</md-button>","</md-toast>"].join(""),controller:["$scope",function(e){var o=this;e.$watch(function(){return n},function(){o.content=n}),this.resolve=function(){t.hide(a)}}],theme:e.defaultTheme(),controllerAs:"toast",bindToController:!0};return o}]}).addMethod("updateTextContent",e).addMethod("updateContent",e);return o.$inject=["$animate","$mdToast","$mdUtil"],i}goog.provide("ng.material.components.toast"),goog.require("ng.material.components.button"),goog.require("ng.material.core"),angular.module("material.components.toast",["material.core","material.components.button"]).directive("mdToast",MdToastDirective).provider("$mdToast",MdToastProvider),MdToastDirective.$inject=["$mdToast"],MdToastProvider.$inject=["$$interimElementProvider"],ng.material.components.toast=angular.module("material.components.toast");